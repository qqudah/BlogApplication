@model IEnumerable<BlogApplication.Models.Domain.Tag>

@{
    ViewData["Title"] = "List";
}

<h1>List</h1>

<button class="btn btn-dark" id="openTagModal">Add Tag</button>


<div class="modal fade" id="tagModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body" id="tagModalContent">
                
            </div>
        </div>
    </div>
</div>


<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                <a asp-action="Update" asp-route-id="@item.Id">Edit</a> |
                
                    <button onclick="deleteTag('@item.Id')" class="btn btn-danger">Delete</button>

            </td>
        </tr>
}
    </tbody>
</table>


@section Scripts {
    <script>
        function deleteTag(id) {
            fetch('/Tag/Delete/' + id, {
                method: 'DELETE'
            })
            .then(res => {
                if (res.ok) {
                    location.reload();
                }
            });
        }
    </script>
    <script>
        document.getElementById('openTagModal').addEventListener('click', function () {
            fetch('/Tag/Add')
                .then(response => response.text())
                .then(html => {
                    document.getElementById('tagModalContent').innerHTML = html;
                    var tagModal = new bootstrap.Modal(document.getElementById('tagModal'));
                    tagModal.show();
                });
        });
    </script>


}
